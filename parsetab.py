
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMSUBleftMULDIVAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM THEN TRUE WHILEprogram : expexp : exp SUM expexp : exp SUB expexp : exp MUL expexp : exp DIV expexp : INTEGERNUMBER'
    
_lr_action_items = {'INTEGERNUMBER':([0,4,5,6,7,],[3,3,3,3,3,]),'$end':([1,2,3,8,9,10,11,],[0,-1,-6,-2,-3,-4,-5,]),'SUM':([2,3,8,9,10,11,],[4,-6,-2,-3,-4,-5,]),'SUB':([2,3,8,9,10,11,],[5,-6,-2,-3,-4,-5,]),'MUL':([2,3,8,9,10,11,],[6,-6,6,6,-4,-5,]),'DIV':([2,3,8,9,10,11,],[7,-6,7,7,-4,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'exp':([0,4,5,6,7,],[2,8,9,10,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> exp','program',1,'p_program','Parser.py',15),
  ('exp -> exp SUM exp','exp',3,'p_exp_sum','Parser.py',19),
  ('exp -> exp SUB exp','exp',3,'p_exp_sub','Parser.py',24),
  ('exp -> exp MUL exp','exp',3,'p_exp_mul','Parser.py',29),
  ('exp -> exp DIV exp','exp',3,'p_exp_div','Parser.py',34),
  ('exp -> INTEGERNUMBER','exp',1,'p_exp_integerNumber','Parser.py',39),
]
